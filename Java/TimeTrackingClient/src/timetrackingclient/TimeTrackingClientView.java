package timetrackingclient;

import application.Application;
import org.jdesktop.application.Action;
import org.jdesktop.application.ResourceMap;
import org.jdesktop.application.SingleFrameApplication;
import org.jdesktop.application.FrameView;
import org.jdesktop.application.TaskMonitor;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import javax.swing.Timer;
import javax.swing.Icon;
import javax.swing.JDialog;
import javax.swing.JFrame;

/**
 * The application's main frame
 * @author manuel, steffen
 */
public class TimeTrackingClientView extends FrameView
{

    public TimeTrackingClientView(SingleFrameApplication app)
    {
        super(app);

        initComponents();

        // status bar initialization - message timeout, idle icon and busy animation, etc
        ResourceMap resourceMap = getResourceMap();
        int messageTimeout = resourceMap.getInteger("StatusBar.messageTimeout");
        messageTimer = new Timer(messageTimeout, new ActionListener()
        {

            public void actionPerformed(ActionEvent e)
            {
                statusMessageLabel.setText("");
            }

        });
        messageTimer.setRepeats(false);
        int busyAnimationRate = resourceMap.getInteger("StatusBar.busyAnimationRate");
        for (int i = 0; i < busyIcons.length; i++)
        {
            busyIcons[i] = resourceMap.getIcon("StatusBar.busyIcons[" + i + "]");
        }
        busyIconTimer = new Timer(busyAnimationRate, new ActionListener()
        {

            public void actionPerformed(ActionEvent e)
            {
                busyIconIndex = (busyIconIndex + 1) % busyIcons.length;
                statusAnimationLabel.setIcon(busyIcons[busyIconIndex]);
            }

        });
        idleIcon = resourceMap.getIcon("StatusBar.idleIcon");
        statusAnimationLabel.setIcon(idleIcon);
        progressBar.setVisible(false);

        // connecting action tasks to status bar via TaskMonitor
        TaskMonitor taskMonitor = new TaskMonitor(getApplication().getContext());
        taskMonitor.addPropertyChangeListener(new java.beans.PropertyChangeListener()
        {

            public void propertyChange(java.beans.PropertyChangeEvent evt)
            {
                String propertyName = evt.getPropertyName();
                if ("started".equals(propertyName))
                {
                    if (!busyIconTimer.isRunning())
                    {
                        statusAnimationLabel.setIcon(busyIcons[0]);
                        busyIconIndex = 0;
                        busyIconTimer.start();
                    }
                    progressBar.setVisible(true);
                    progressBar.setIndeterminate(true);
                }
                else if ("done".equals(propertyName))
                {
                    busyIconTimer.stop();
                    statusAnimationLabel.setIcon(idleIcon);
                    progressBar.setVisible(false);
                    progressBar.setValue(0);
                }
                else if ("message".equals(propertyName))
                {
                    String text = (String) (evt.getNewValue());
                    statusMessageLabel.setText((text == null) ? "" : text);
                    messageTimer.restart();
                }
                else if ("progress".equals(propertyName))
                {
                    int value = (Integer) (evt.getNewValue());
                    progressBar.setVisible(true);
                    progressBar.setIndeterminate(false);
                    progressBar.setValue(value);
                }
            }

        });
    }

    public void reset()
    {
        statusMessage2.setText("");
        usernameTextField2.setText("");
        passwordTextField2.setText("");
    }

    /**
     * 
     */
    @Action
    public void showAboutBox()
    {
        if (aboutBox == null)
        {
            JFrame mainFrame = TimeTrackingClientApp.getApplication().getMainFrame();
            aboutBox = new TimeTrackingClientAboutBox(mainFrame);
            aboutBox.setLocationRelativeTo(mainFrame);
        }
        TimeTrackingClientApp.getApplication().show(aboutBox);
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        loginWindow = new javax.swing.JPanel();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel3 = new javax.swing.JPanel();
        jLabel5 = new javax.swing.JLabel();
        usernameTextField2 = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        passwordTextField2 = new javax.swing.JPasswordField();
        jButton3 = new javax.swing.JButton();
        statusMessage2 = new javax.swing.JLabel();
        comePushButton = new javax.swing.JButton();
        goPushButton = new javax.swing.JButton();
        menuBar = new javax.swing.JMenuBar();
        javax.swing.JMenu fileMenu = new javax.swing.JMenu();
        javax.swing.JMenuItem exitMenuItem = new javax.swing.JMenuItem();
        javax.swing.JMenu helpMenu = new javax.swing.JMenu();
        javax.swing.JMenuItem aboutMenuItem = new javax.swing.JMenuItem();
        statusPanel = new javax.swing.JPanel();
        javax.swing.JSeparator statusPanelSeparator = new javax.swing.JSeparator();
        statusMessageLabel = new javax.swing.JLabel();
        statusAnimationLabel = new javax.swing.JLabel();
        progressBar = new javax.swing.JProgressBar();

        loginWindow.setName("loginWindow"); // NOI18N
        loginWindow.setLayout(new javax.swing.BoxLayout(loginWindow, javax.swing.BoxLayout.LINE_AXIS));

        jTabbedPane1.setName("jTabbedPane1"); // NOI18N

        jPanel3.setName("jPanel1"); // NOI18N

        org.jdesktop.application.ResourceMap resourceMap = org.jdesktop.application.Application.getInstance(timetrackingclient.TimeTrackingClientApp.class).getContext().getResourceMap(TimeTrackingClientView.class);
        jLabel5.setText(resourceMap.getString("jLabel1.text")); // NOI18N
        jLabel5.setName("jLabel1"); // NOI18N

        usernameTextField2.setText(resourceMap.getString("usernameTextField.text")); // NOI18N
        usernameTextField2.setName("usernameTextField"); // NOI18N

        jLabel6.setText(resourceMap.getString("jLabel2.text")); // NOI18N
        jLabel6.setName("jLabel2"); // NOI18N

        passwordTextField2.setText(resourceMap.getString("passwordTextField.text")); // NOI18N
        passwordTextField2.setName("passwordTextField"); // NOI18N

        jButton3.setText(resourceMap.getString("loginPushButton.text")); // NOI18N
        jButton3.setName("loginPushButton"); // NOI18N
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        statusMessage2.setText(resourceMap.getString("statusMessage.text")); // NOI18N
        statusMessage2.setName("statusMessage"); // NOI18N

        comePushButton.setText(resourceMap.getString("comePushButton.text")); // NOI18N
        comePushButton.setName("comePushButton"); // NOI18N
        comePushButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comePushButtonActionPerformed(evt);
            }
        });

        goPushButton.setText(resourceMap.getString("goPushButton.text")); // NOI18N
        goPushButton.setName("goPushButton"); // NOI18N
        goPushButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                goPushButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(statusMessage2)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel6)
                            .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addComponent(comePushButton)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(goPushButton, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(passwordTextField2)
                            .addComponent(usernameTextField2))))
                .addContainerGap(77, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(16, 16, 16)
                .addComponent(statusMessage2)
                .addGap(18, 18, 18)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(usernameTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(passwordTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(43, 43, 43)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton3)
                    .addComponent(comePushButton)
                    .addComponent(goPushButton))
                .addContainerGap())
        );

        jTabbedPane1.addTab(resourceMap.getString("jPanel1.TabConstraints.tabTitle"), jPanel3); // NOI18N

        loginWindow.add(jTabbedPane1);

        menuBar.setName("menuBar"); // NOI18N

        fileMenu.setText(resourceMap.getString("fileMenu.text")); // NOI18N
        fileMenu.setName("fileMenu"); // NOI18N

        javax.swing.ActionMap actionMap = org.jdesktop.application.Application.getInstance(timetrackingclient.TimeTrackingClientApp.class).getContext().getActionMap(TimeTrackingClientView.class, this);
        exitMenuItem.setAction(actionMap.get("quit")); // NOI18N
        exitMenuItem.setName("exitMenuItem"); // NOI18N
        fileMenu.add(exitMenuItem);

        menuBar.add(fileMenu);

        helpMenu.setText(resourceMap.getString("helpMenu.text")); // NOI18N
        helpMenu.setName("helpMenu"); // NOI18N

        aboutMenuItem.setAction(actionMap.get("showAboutBox")); // NOI18N
        aboutMenuItem.setName("aboutMenuItem"); // NOI18N
        helpMenu.add(aboutMenuItem);

        menuBar.add(helpMenu);

        statusPanel.setName("statusPanel"); // NOI18N

        statusPanelSeparator.setName("statusPanelSeparator"); // NOI18N

        statusMessageLabel.setName("statusMessageLabel"); // NOI18N

        statusAnimationLabel.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        statusAnimationLabel.setName("statusAnimationLabel"); // NOI18N

        progressBar.setName("progressBar"); // NOI18N

        javax.swing.GroupLayout statusPanelLayout = new javax.swing.GroupLayout(statusPanel);
        statusPanel.setLayout(statusPanelLayout);
        statusPanelLayout.setHorizontalGroup(
            statusPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(statusPanelSeparator, javax.swing.GroupLayout.DEFAULT_SIZE, 374, Short.MAX_VALUE)
            .addGroup(statusPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(statusMessageLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 190, Short.MAX_VALUE)
                .addComponent(progressBar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(statusAnimationLabel)
                .addContainerGap())
        );
        statusPanelLayout.setVerticalGroup(
            statusPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(statusPanelLayout.createSequentialGroup()
                .addComponent(statusPanelSeparator, javax.swing.GroupLayout.PREFERRED_SIZE, 2, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(statusPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(statusMessageLabel)
                    .addComponent(statusAnimationLabel)
                    .addComponent(progressBar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(3, 3, 3))
        );

        setComponent(loginWindow);
        setMenuBar(menuBar);
        setStatusBar(statusPanel);
    }// </editor-fold>//GEN-END:initComponents

private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
    try
    { // Call Web Service Operation
        time_tracking.UserHandlerServiceService service = new time_tracking.UserHandlerServiceService();
        time_tracking.UserHandlerService port = service.getUserHandlerServicePort();
        String pwd = new String(passwordTextField2.getPassword());
        time_tracking.UserBean result = port.loginUser(usernameTextField2.getText(), pwd);

        if (result != null)
        {
            Application.getInstance().setUser(result);

            if (ttSystem == null)
            {
                JFrame mainFrame = TimeTrackingClientApp.getApplication().getMainFrame();
                ttSystem = new TTSystem(this, mainFrame, true);
                ttSystem.setLocationRelativeTo(mainFrame);
            }
            TimeTrackingClientApp.getApplication().show(ttSystem);
        }
        else
        {
            statusMessage.setText("Benutzername/ Passwort ist falsch!");
        }
    }
    catch (Exception ex)
    {
        System.err.println(ex.toString());
    }
}//GEN-LAST:event_jButton1ActionPerformed

private void comePushButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comePushButtonActionPerformed
    try
    { // Call Web Service Operation
        time_tracking.UserHandlerServiceService serviceUser = new time_tracking.UserHandlerServiceService();
        time_tracking.UserHandlerService portUser = serviceUser.getUserHandlerServicePort();
        String pwd = new String(passwordTextField2.getPassword());
        time_tracking.UserBean resultUser = portUser.loginUser(usernameTextField2.getText(), pwd);

        if (resultUser != null)
        {
            Application.getInstance().setUser(resultUser);

           // Call Web Service Operation for Come-Booking
            time_tracking.BookingHandlerServiceService bookingService = new time_tracking.BookingHandlerServiceService();
            time_tracking.BookingHandlerService portBooking = bookingService.getBookingHandlerServicePort();
            boolean resultBooking = portBooking.makeComeBooking(resultUser.getMid());
            
            
            if (ttSystem == null)
            {
                JFrame mainFrame = TimeTrackingClientApp.getApplication().getMainFrame();
                ttSystem = new TTSystem(this, mainFrame, true);
                ttSystem.setLocationRelativeTo(mainFrame);
            }
            TimeTrackingClientApp.getApplication().show(ttSystem);
        }
        else
        {
            statusMessage2.setText("Benutzername/ Passwort ist falsch!");
        }
    }
    catch (Exception ex)
    {
        System.err.println(ex.toString());
    }
}//GEN-LAST:event_comePushButtonActionPerformed

private void goPushButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_goPushButtonActionPerformed
    try
    {
        // Call Web Service Operation
        time_tracking.UserHandlerServiceService serviceUser = new time_tracking.UserHandlerServiceService();
        time_tracking.UserHandlerService portUser = serviceUser.getUserHandlerServicePort();
        String pwd = new String(passwordTextField2.getPassword());
        time_tracking.UserBean resultUser = portUser.loginUser(usernameTextField2.getText(), pwd);

        if (resultUser != null)
        {
            Application.getInstance().setUser(resultUser);

            // Call Web Service Operation for Go-Booking
            time_tracking.BookingHandlerServiceService serviceBooking = new time_tracking.BookingHandlerServiceService();
            time_tracking.BookingHandlerService portBooking = serviceBooking.getBookingHandlerServicePort();
            boolean resultBooking = portBooking.makeGoBooking(resultUser.getMid());


            if (ttSystem == null)
            {
                JFrame mainFrame = TimeTrackingClientApp.getApplication().getMainFrame();
                ttSystem = new TTSystem(this, mainFrame, true);
                ttSystem.setLocationRelativeTo(mainFrame);
            }
            TimeTrackingClientApp.getApplication().show(ttSystem);
        }
        else
        {
            statusMessage2.setText("Benutzername/ Passwort ist falsch!");
        }
    }
    catch (Exception ex)
    {
        System.err.println(ex.toString());
    }
}//GEN-LAST:event_goPushButtonActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton comePushButton;
    private javax.swing.JButton goPushButton;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JPanel loginWindow;
    private javax.swing.JMenuBar menuBar;
    private javax.swing.JPasswordField passwordTextField;
    private javax.swing.JPasswordField passwordTextField1;
    private javax.swing.JPasswordField passwordTextField2;
    private javax.swing.JProgressBar progressBar;
    private javax.swing.JLabel statusAnimationLabel;
    private javax.swing.JLabel statusMessage;
    private javax.swing.JLabel statusMessage1;
    private javax.swing.JLabel statusMessage2;
    private javax.swing.JLabel statusMessageLabel;
    private javax.swing.JPanel statusPanel;
    private javax.swing.JTextField usernameTextField;
    private javax.swing.JTextField usernameTextField1;
    private javax.swing.JTextField usernameTextField2;
    // End of variables declaration//GEN-END:variables
    private final Timer messageTimer;
    private final Timer busyIconTimer;
    private final Icon idleIcon;
    private final Icon[] busyIcons = new Icon[15];
    private int busyIconIndex = 0;
    private JDialog aboutBox;
    private JDialog ttSystem;
}
